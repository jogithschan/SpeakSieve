#Requirements: User will enter a string(word or phrase)

# -*- coding: utf-8 -*-
"""extract_phrases.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wNlTzQdsupwd--96o_OIvOiAw-RFbEQs
"""

import pandas as pd
import numpy as np
# !pip install pydub
from pydub import AudioSegment
import csv
import string
import nltk
nltk.download('wordnet')
from nltk.stem import PorterStemmer
import re
from nltk.stem import WordNetLemmatizer
nltk.download('punkt')

find="whats Your Interest"
find=stem(punc(find))
find

def punc(string,bool=True):
  string = re.sub(r'[^\w\s]', '', string)
  return string.lower()

def stem(string):
  list2=nltk.word_tokenize(string)
  ps = PorterStemmer()
  stemmed_string = ' '.join([ps.stem(words) for words in list2])
  return stemmed_string

all=pd.read_csv("transcript-word.csv",header=None)

path = 'newname.mp3'
audio_file = AudioSegment.from_file(path, format="mp3")
spacer_sound = AudioSegment.silent(duration=1000) 

all[3]=all[2].apply(punc)
all[4] = all[3].apply(stem)

l1=all[2]
l2=all[3]
l3=all[4]

q=find.split()
ts=[]
for i in range(len(l1)):
  if(l1[i]==q[0] or l2[i]==q[0] or l3[i]==q[0]):
    p=1
    for k in range(i+1,len(l1)):
      if(p<len(q) and (l1[k]==q[p] or l2[k]==q[p] or l3[k]==q[p])):
        p+=1
        continue
      elif(p==len(q)):
        ts.append([all[0][i],all[1][i+p-1]])
        break
      else:
        break

extracted_audios=[]
for i in range(len(ts)):
  extracted_audios.append(audio_file[ts[i][0]*1000-20:ts[i][1]*1000+20])

for i in range(len(extracted_audios)):
  extracted_audios[i].export(f"out{i}.wav",format="wav")
